// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// https://docs.nestjs.com/recipes/prisma
//Note that during installation, Prisma automatically invokes the prisma generate command for you. In the future, you need to run this command after every change to your Prisma models to update your generated Prisma Client.

//Note The prisma generate command reads your Prisma schema and updates the generated Prisma Client library inside node_modules/@prisma/client. 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id    Int     @default(autoincrement()) @id
  name  String
  is_active Boolean @default(true)
  committees CommitteeMember[]
}

model Committee {
  id    Int     @default(autoincrement()) @id
  bond  String //Vínculo 
  name  String //Órgão
  begin_date DateTime?
  end_date DateTime?
  term Int? @default(1)//Ordem do mandato
  ordinance String? //Portaria 
  observations String?
  is_active Boolean @default(true)
  members CommitteeMember[]
}

model CommitteeMember {
  member Employee @relation(fields: [member_id], references: [id])
  member_id Int // relation scalar field (used in the `@relation` attribute above)
  committee Committee @relation(fields: [committee_id], references: [id])
  committee_id Int // relation scalar field (used in the `@relation` attribute above)
  role  String? @default("Membro") //Cargo
  begin_date DateTime? @default(now())
  term Int? @default(1) //Ordem do mandato
  observations String?
  is_active Boolean @default(true)

  @@id([member_id, committee_id])
	@@map("MembersOnCommittees")
}